{"version":3,"sources":["components/calendar/calendar.js","components/task/task.js","components/app/app.js","index.js"],"names":["Calendar","calDate","daysWeek","monthArray","prevClickHandler","nextClickHandler","tableClickHandler","date","Date","year","month","weeks","map","week","index","className","months","years","getLastDay","getDate","dayCalendar","arr","subArr","elem","subIndex","currDay1","currDay2","getMonth","getFullYear","createTable","n","result","count","Math","ceil","length","i","j","push","splice","chunk","left","right","res","unshift","normalize","range","getDay","getFirstWeekDay","getLastWeekDay","draw","onClick","icon","faChevronLeft","faChevronRight","Table","size","Task","getValue","datClick","addNewTask","notes","editId","changeProp","deleteTask","taskDone","setEditId","textTask","note","done","id","tasksActive","Button","outline","color","InputGroup","Input","value","onChange","event","InputGroupAddon","addonType","initCalendar","initNotes","nanoid","App","useState","setCalDate","setNotes","obj","setObj","setDatClick","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","yearArray","alert","Container","Row","Col","activeTd","document","querySelector","target","innerHTML","classList","remove","add","infoDate","prop","reduce","filter","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.79151d07.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Table } from 'reactstrap';\r\n\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nfunction Calendar({calDate, daysWeek, monthArray, prevClickHandler, nextClickHandler, tableClickHandler}) {\r\n    let date  = new Date();\r\n    const year = calDate.year;\r\n    const month = calDate.month;\r\n\r\n    const weeks = daysWeek.map(((week, index) => {\r\n        return <th className=\"day-week\" key={index}>{week}</th>\r\n    }));\r\n\r\n    const months = monthArray[calDate.month];\r\n\r\n    const years = year;\r\n\r\n    function range(count) {\r\n        let arr = [];\r\n        \r\n        for (let i = 1; i <= count; i++) {\r\n            arr.push(i);\r\n        }\r\n        \r\n        return arr;\r\n    }\r\n\r\n    function getLastDay(year, month) {\r\n        let date = (new Date(year, month + 1, 0)).getDate();\r\n        return date;\r\n    }\r\n\r\n    function getFirstWeekDay(year, month) {\r\n        let date = (new Date(year, month, 1)).getDay();        \r\n        if (date == 0) {\r\n            return 6;\r\n        } else {\r\n            return date - 1;\r\n        }\r\n    }\r\n\r\n    function getLastWeekDay(year, month) {\r\n        let date = (new Date(year, month, getLastDay(year, month))).getDay();\r\n        \r\n        if (date == 0) {\r\n            return 6;\r\n        } else {\r\n            return date - 1;\r\n        }\r\n    }    \r\n\r\n    function normalize(arr, left, right) {\r\n        let res = arr;\r\n        for (let i = 0; i < left; i++) {\r\n            res.unshift('');\r\n        }\r\n        for (var i = 0; i < right; i++) {\r\n            res.push('');\r\n        }\r\n        \r\n        return res;\r\n    }\r\n    \r\n    function chunk(arr, n) {\r\n        let result = [];\r\n        let k = 0;\r\n        let count = Math.ceil(arr.length / n);\r\n        \r\n        for (let i = 0; i < count; i++) {\r\n            for (let j = 0; j < n; j++) {\r\n                result.push(arr.splice(i * n, n));\r\n                k++;\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    function createTable(arr) {\r\n        const tableContent = (\r\n            <tbody>\r\n                {arr.map((subArr, index) => {\r\n                    return (\r\n                        <tr key={index}>\r\n                            {\r\n                                subArr.map((elem, subIndex) => {\r\n                                    let currDay1 = subArr[subIndex] + '-' + calDate.month + '-' + calDate.year;\r\n                                    let currDay2 = date.getDate() + '-' + (date.getMonth()) + '-' + date.getFullYear();\r\n                                    return ( \r\n                                        <td \r\n                                            className={currDay1 === currDay2 ? 'calendar-day active-day' : 'calendar-day'}\r\n                                            key={subIndex}>\r\n                                                {elem}\r\n                                        </td>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        )\r\n        return tableContent;\r\n    }\r\n\r\n    function draw(year, month) {\r\n        let arr = range(getLastDay(year, month));\r\n        let firstWeekDay = getFirstWeekDay(year, month);\r\n        let lastWeekDay  = getLastWeekDay(year, month);\r\n        let nums = chunk(normalize(arr, firstWeekDay, 6 - lastWeekDay), 7);\r\n        return createTable(nums)\r\n    }\r\n\r\n    let dayCalendar = draw(year, month);\r\n\r\n\r\n    return (\r\n        <div className=\"calendar\">\r\n            <header>\r\n                <div className=\"calendar-date header-color\">\r\n                    <div className=\"calendar-month\">{months}</div>\r\n                    <div className=\"calendar-year\">{years}</div>\r\n                </div>\r\n                <div className=\"calendar-arrow\">\r\n                    <div onClick={() => prevClickHandler()} className=\"arrow\"><FontAwesomeIcon icon={faChevronLeft} /></div>\r\n                    <div onClick={() => nextClickHandler()} className=\"arrow\"><FontAwesomeIcon icon={faChevronRight} /></div>\r\n                </div>\r\n            </header>\r\n\r\n            <Table size=\"sm\" onClick={tableClickHandler}>\r\n                <thead>\r\n                    <tr>\r\n                        {weeks}\r\n                    </tr>\r\n                </thead>\r\n                {dayCalendar}\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar;","import React, { useState } from 'react';\r\nimport { InputGroup, InputGroupAddon, Input, Button } from 'reactstrap';\r\n\r\n\r\nfunction Task({getValue, datClick, addNewTask, notes, editId, changeProp, deleteTask, taskDone, setEditId}) {\r\n\r\n    const textTask = notes.map((note) => {\r\n        if(note.date == datClick.date) {\r\n            return <div key={note.id} className=\"block-task__item\">\r\n                        <span className={note.done ? \"item-note task-done\" : \"item-note\"} onClick={() => setEditId(note.id)}>{note.tasksActive}</span>\r\n                        <div className=\"block-task__btn\">\r\n                            <Button outline color=\"primary\" size=\"sm\" onClick={() => taskDone(note.id)} >Сделано</Button>\r\n                            <Button outline color=\"primary\" size=\"sm\" onClick={() => deleteTask(note.id)}>Удалить</Button>\r\n                        </div>\r\n                    </div>\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"task\">\r\n            <h3 className=\"header-color\">Задачи:</h3>\r\n            <InputGroup className=\"task-form\">\r\n                <Input value={getValue('tasksActive')} onChange={event => changeProp('tasksActive', event)} />\r\n                <InputGroupAddon addonType=\"prepend\"><Button onClick={() => addNewTask()} color=\"primary\">{editId ? 'Сохранить' : 'Добавить'}</Button></InputGroupAddon>\r\n            </InputGroup>\r\n            <div className=\"block-task\">\r\n                {textTask}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { nanoid } from 'nanoid';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport Calendar from \"../calendar/calendar\";\r\nimport Task from \"../task/task\";\r\n\r\nconst initCalendar = {\r\n    month: new Date().getMonth(),\r\n    year: new Date().getFullYear()\r\n}\r\n\r\nconst initNotes = [\r\n    {id: nanoid(), date: '1-4-2021', tasksActive: \"Заметка 1 апреля\", done: false},\r\n    {id: nanoid(), date: '2-4-2021', tasksActive: \"Заметка 2 апреля\", done: false},\r\n    {id: nanoid(), date: '3-4-2021', tasksActive: \"Заметка 3 апреля\", done: false}\r\n];\r\n\r\nfunction App() {\r\n    const [calDate, setCalDate] = useState(initCalendar);\r\n    const [notes, setNotes] = useState(initNotes);\r\n    const [obj, setObj] = useState(getInitObj());\r\n    const [datClick, setDatClick] = useState('');\r\n    const [editId, setEditId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const data = localStorage.getItem('my-task');\r\n        if(data) {\r\n            setNotes(JSON.parse(data))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('my-task', JSON.stringify(notes))\r\n    })\r\n\r\n    const daysWeek = ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС'];\r\n    const monthArray = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\r\n    const yearArray = [];\r\n\r\n    for(let i = 2000; i <= 2100; i++) {\r\n        yearArray.push(i)\r\n    }\r\n\r\n    function prevClickHandler() {\r\n        let activeTd = document.querySelector('.calendar td.active');\r\n\t\tif(activeTd) {\r\n\t\t\tactiveTd.classList.remove('active');\r\n\t\t}\r\n        if(calDate.month > 0) {\r\n            let month = calDate.month;\r\n            month--;\r\n            setCalDate({...calDate, month: month});\r\n        } else {\r\n            let year = calDate.year;\r\n            year--;\r\n            setCalDate({...calDate, month: 11, year: year});\r\n        }\r\n    }\r\n\r\n    function nextClickHandler() {\r\n        let activeTd = document.querySelector('.calendar td.active');\r\n\t\tif(activeTd) {\r\n\t\t\tactiveTd.classList.remove('active');\r\n\t\t}\r\n        if(calDate.month >= 0 && calDate.month < 11) {\r\n            let month = calDate.month;\r\n            month++;\r\n            setCalDate({...calDate, month: month});\r\n        } else {\r\n            let year = calDate.year;\r\n            year++;\r\n            setCalDate({...calDate, month: 0, year: year});\r\n        }\r\n    }\r\n\r\n    function tableClickHandler(event) {\r\n        let activeTd = document.querySelector('.calendar td.active');\r\n        let target = event.target;\r\n        if (target.innerHTML === '') {\r\n            if(activeTd) {\r\n                activeTd.classList.remove('active');\r\n            }\r\n        } else {\r\n            if(activeTd) {\r\n                activeTd.classList.remove('active');\r\n            }\r\n            target.classList.add('active');\r\n            let infoDate = target.innerHTML + '-' + (calDate.month + 1) + '-' + calDate.year\r\n            setObj({...obj, date: infoDate});\r\n            setDatClick({date: infoDate});\r\n        }\r\n    };\r\n\r\n    function getInitObj() {\r\n        return {\r\n            id: nanoid(),\r\n            date: '',\r\n            tasksActive: [],\r\n            done: false\r\n        }\r\n    }\r\n\r\n    function addNewTask() {\r\n        if(editId) {\r\n            setEditId(null);\r\n        } else {\r\n            if(obj.tasksActive.length > 0) {\r\n                setNotes([...notes, obj]);\r\n                setObj({...obj, id: nanoid(), tasksActive: ''});\r\n            } else {\r\n                alert('Заполните!');\r\n            }\r\n        }\r\n    }\r\n\r\n    function deleteTask(id) {\r\n        setNotes(notes.filter(note => note.id !== id));\r\n    }\r\n\r\n    function changeProp(prop, event) {\r\n        if(editId) {\r\n            setNotes(notes.map(note => \r\n                note.id == editId ? {...note, [prop]: event.target.value} : note\r\n            ))\r\n        } else {\r\n            setObj({...obj, [prop]: event.target.value});\r\n        }\r\n    }\r\n\r\n    function getValue(prop) {\r\n\t\tif (editId) {\r\n\t\t\treturn notes.reduce((res, note) => note.id === editId ? note[prop] : res, '');\r\n\t\t} else {\r\n\t\t\treturn obj[prop];\r\n\t\t}\r\n\t}\r\n\r\n    function taskDone(id) {\r\n        setNotes(notes.map(note => {\r\n            if(note.id === id) {\r\n                note.done = !note.done;\r\n            }\r\n            return note;  \r\n        }))        \r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"main-block\">\r\n            <Row>\r\n                <Col>\r\n                    <Calendar addNewTask={addNewTask} tableClickHandler={tableClickHandler} prevClickHandler={prevClickHandler} nextClickHandler={nextClickHandler} calDate={calDate} monthArray={monthArray} daysWeek={daysWeek} yearArray={yearArray} />\r\n                </Col>\r\n                <Col>\r\n                    <Task editId={editId} getValue={getValue} setEditId={setEditId} taskDone={taskDone} deleteTask={deleteTask} datClick={datClick} addNewTask={addNewTask} notes={notes} obj={obj} changeProp={changeProp} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css'; \r\nimport App from './components/app/app';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}